{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Home.js","components/FetchData.js","components/Counter.js","components/ApplicationInsights.js","components/CartItemsTable.js","components/GetCarts.js","components/KeyVaultSecret.js","components/CreateBlobStorage.js","components/CamundaStartProcessDMN.js","components/VariableTable.js","components/GetWorkflowTasks.js","components/CamundaDirectCallDMN.js","components/CreateCart.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","Navbar","className","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","Home","href","FetchData","forecasts","loading","populateWeatherData","contents","renderForecastsTable","id","a","fetch","response","json","data","aria-labelledby","map","forecast","key","date","temperatureC","temperatureF","summary","Counter","currentCount","incrementCounter","process","aria-live","browserHistory","createBrowserHistory","basename","reactPlugin","ReactPlugin","ApplicationInsights","config","instrumentationKey","extensions","extensionConfig","identifier","history","loadAppInsights","CartItemsTable","cartitems","renderCartItems","cartitem","itemName","GetCarts","backendUrl","productionConfig","BACKEND_URL","carts","CheckOutCart","cart","description","statusName","Button","disabled","status","cartItems","renderCarts","url","cartId","alert","KeyVaultSecret","secret","GetKeyVaultSecret","renderKeyVaultSecret","value","withAITracking","CreateBlobStorage","blobContent","blobName","handleChangeBlobContent","handleChangeBlobName","event","target","type","onChange","content","CamundaStartProcessDMN","typeOfBuyer","handleChangeBuyerType","StartWorkflowProcess","VariableTable","variables","renderVariableTable","variable","GetWorkflowTasks","workflowTasks","taskClaimStatus","taskIdReadyForShipping","ClaimTask","CompleteTask","cartReadyForShipping","currentTarget","checked","task","userTasks","taskId","assignee","Description","renderTasks","wfs","find","e","readyForShipping","CamundaDirectCallDMN","GetDecisionForSelection","decision","suggestedCarModel","CreateCart","cartItemName","cartCheckedOut","handleChangeCartItemName","class","CreateCartItem","item","trackMetric","push","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","URL","origin","addEventListener","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a7765478.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">React</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/GetCarts\">GetCarts</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/CreateCart\">CreateCart</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/GetWorkflowTasks\">Get User Tasks</NavLink>\r\n                </NavItem>\r\n                {/* <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/KeyVaultSecret\">KeyVaultSecret</NavLink>\r\n                </NavItem> */}\r\n                {/* <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/CreateBlobStorage\">CreateBlobStorage</NavLink>\r\n                </NavItem> */}\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/CamundaStartProcessDMN\">Start Workflow with DMN</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/CamundaDirectCallDMN\">Get DMN Decision</NavLink>\r\n                </NavItem>\r\n               \r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>Hello, world!</h1>\r\n        <p>Welcome to your new single-page application, built with:</p>\r\n        <ul>\r\n          <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n          <li><a href='https://facebook.github.io/react/'>React</a> for client-side code</li>\r\n          <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n        </ul>\r\n        <p>To help you get started, we have also set up:</p>\r\n        <ul>\r\n          <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n          <li><strong>Development server integration</strong>. In development mode, the development server from <code>create-react-app</code> runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n          <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration produces minified, efficiently bundled JavaScript files.</li>\r\n        </ul>\r\n        <p>The <code>ClientApp</code> subdirectory is a standard React application based on the <code>create-react-app</code> template. If you open a command prompt in that directory, you can run <code>npm</code> commands such as <code>npm test</code> or <code>npm install</code>.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('https://ikeaserver.azurewebsites.net/weatherforecast');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n  static displayName = Counter.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n\r\n        <h2>ENV: {process.env.NODE_ENV}</h2>\r\n        <p>This is a simple example of a React component.</p>\r\n\r\n        <p aria-live=\"polite\">Current count: <strong>{this.state.currentCount}</strong></p>\r\n\r\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Increment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// AppInsights.js\r\nimport { ApplicationInsights } from '@microsoft/applicationinsights-web';\r\nimport { ReactPlugin } from '@microsoft/applicationinsights-react-js';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nconst browserHistory = createBrowserHistory({ basename: '' });\r\nconst reactPlugin = new ReactPlugin();\r\nconst appInsights = new ApplicationInsights({\r\n    config: {\r\n        instrumentationKey: 'f12bf347-6fb4-4e9f-90df-e91327b9e3ad',\r\n        extensions: [reactPlugin],\r\n        extensionConfig: {\r\n          [reactPlugin.identifier]: { history: browserHistory }\r\n        }\r\n    }\r\n});\r\nappInsights.loadAppInsights();\r\nexport { reactPlugin, appInsights };","import React, { Component } from 'react';\r\n\r\n// import { withAITracking } from '@microsoft/applicationinsights-react-js';\r\n// import { reactPlugin, appInsights } from './ApplicationInsights';\r\nimport withAppInsights from './ApplicationInsights';\r\n// const getCustomerFromDB = useTrackEvent(appInsights, \"GetCustomers\", \"https://localhost:44332/Customer\");\r\n\r\nexport class CartItemsTable extends Component {\r\n  static displayName = \"CartItemsTable\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cartitems: props.cartitems };\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n    static renderCartItems(cartitems) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Name</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {cartitems.map(cartitem =>\r\n            <tr key={cartitem.id}>\r\n              <td>{cartitem.id}</td>\r\n              <td>{cartitem.itemName}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return CartItemsTable.renderCartItems(this.state.cartitems);\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default CartItemsTable;","import React, { Component } from 'react';\r\n\r\n// import { withAITracking } from '@microsoft/applicationinsights-react-js';\r\n// import { reactPlugin, appInsights } from './ApplicationInsights';\r\nimport withAppInsights from './ApplicationInsights';\r\n// const getCustomerFromDB = useTrackEvent(appInsights, \"GetCustomers\", \"https://localhost:44332/Customer\");\r\nimport {CartItemsTable} from './CartItemsTable';\r\nimport developConfig from './SettingsDevelopment.json';\r\nimport productionConfig from './SettingsProduction.json';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport class GetCarts extends Component {\r\n  static displayName = \"GetCarts\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    var backendUrl = \"\";\r\n    if(process.env.NODE_ENV == 'development'){\r\n      backendUrl = developConfig.BACKEND_URL;\r\n    } else{\r\n      backendUrl = productionConfig.BACKEND_URL;\r\n    }\r\n\r\n    this.state = { carts: [], loading: true, backendUrl: backendUrl };\r\n\r\n    this.CheckOutCart = this.CheckOutCart.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.GetCarts();\r\n  }\r\n\r\n  renderCarts(carts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Description</th>\r\n            <th>Status</th>\r\n            <th>&nbsp;</th>\r\n            <th>CartItems</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {carts.map(cart =>\r\n            <tr key={cart.id}>\r\n              <td>{cart.id}</td>\r\n              <td>{cart.description}</td>\r\n              <td>{cart.statusName}</td>\r\n              <td><Button disabled={(cart.status == 10 ? false : true) } id={'btnCheckOutCart'+ cart.id} name={'btnCheckOutCart'+ cart.id} onClick={() => this.CheckOutCart(cart.id)}>Check Out</Button></td>\r\n              {/* <td>{cart.CreatedBy}</td> */}\r\n              <td><CartItemsTable cartitems={cart.cartItems}></CartItemsTable></td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n        : this.renderCarts(this.state.carts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Carts</h1>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async GetCarts() {\r\n    //getCustomerFromDB();\r\n    var url = this.state.backendUrl;\r\n\r\n    const response = await fetch(url + 'GetCarts');\r\n    const data = await response.json();\r\n      this.setState({ carts: data.carts, loading: false });\r\n  }\r\n\r\n  async CheckOutCart(cartId)\r\n  {\r\n    alert(cartId);\r\n    var url = this.state.backendUrl;\r\n\r\n    const response = await fetch(url + 'CheckOutCart?cartId=' + cartId);\r\n\r\n  }\r\n}\r\n\r\nexport default GetCarts;","import React, { Component } from 'react';\r\n\r\nimport { withAITracking } from '@microsoft/applicationinsights-react-js';\r\nimport { reactPlugin, appInsights } from './ApplicationInsights';\r\n// const getCustomerFromDB = useTrackEvent(appInsights, \"GetCustomers\", \"https://localhost:44332/Customer\");\r\n\r\nexport class KeyVaultSecret extends Component {\r\n    static displayName = \"KeyVaultSecret\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { secret: \"\", loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.GetKeyVaultSecret();\r\n  }\r\n\r\n  static renderKeyVaultSecret(secret) {\r\n    return (\r\n      <div>\r\n        <h2 id=\"keyVaultSecret\">This is the secret:</h2>\r\n        <div id=\"secretValue\">{secret}</div>\r\n      </div>\r\n      \r\n\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n        : KeyVaultSecret.renderKeyVaultSecret(this.state.secret);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >KeyVaultSecret</h1>\r\n        <p>This component demonstrates fetching data from KeyVault.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async GetKeyVaultSecret() {\r\n    const response = await fetch('https://ikeaserver.azurewebsites.net/KeyVault/GetKeyVaultSecret');\r\n    const data = await response.json();\r\n      this.setState({ secret: data.value, loading: false });\r\n  }\r\n}\r\n\r\nexport default withAITracking(reactPlugin, KeyVaultSecret);","import React, { Component } from 'react';\r\n\r\nimport { withAITracking } from '@microsoft/applicationinsights-react-js';\r\nimport { reactPlugin, appInsights } from './ApplicationInsights';\r\nimport InputGroup from 'reactstrap/lib/InputGroup';\r\n// const getCustomerFromDB = useTrackEvent(appInsights, \"GetCustomers\", \"https://localhost:44332/Customer\");\r\n\r\nexport class CreateBlobStorage extends Component {\r\n  static displayName = \"CreateBlobStorage\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { response: \"\", blobContent: \"\", blobName: \"\" };\r\n    this.handleChangeBlobContent = this.handleChangeBlobContent.bind(this);\r\n    this.handleChangeBlobName = this.handleChangeBlobName.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  static renderCreateBlobStorage(secret) {\r\n    return (\r\n      <h2>This is the secret: {secret}</h2>\r\n    );\r\n  }\r\n\r\n  handleChangeBlobContent(event) {\r\n        this.setState({blobContent: event.target.value});  \r\n  }\r\n  handleChangeBlobName(event) {\r\n        this.setState({blobName: event.target.value});  \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >CreateBlobStorage</h1>\r\n        <p>This component demonstrates creating blob in a storage account.</p>\r\n        <div>Blob content: <input type=\"text\" id=\"txtBlobContent\" name=\"txtBlobContent\" onChange={this.handleChangeBlobContent}></input></div>\r\n        <div>Blob name: <input type=\"text\" id=\"txtBlobName\" name=\"txtBlobName\" onChange={this.handleChangeBlobName}></input></div>\r\n        <div><button id=\"btnCreateBlob\" name=\"btnCreateBlob\" onClick={this.CreateBlobStorage.bind(this)}>Create Blob</button></div>\r\n        <div><h3 id=\"h3ResponseText\" name=\"h3ResponseText\">{this.state.response}</h3></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async CreateBlobStorage() {\r\n    alert('Kalle');\r\n    var content = this.state.blobContent;\r\n    var name = this.state.blobName;\r\n\r\n    const response = await fetch('https://ikeaserver.azurewebsites.net/BlobStorage/CreateBlob?blobContent=' + content + '&blobName=' + name);\r\n    const data = await response.json();\r\n    this.setState({ response: data.response });\r\n  }\r\n}\r\n\r\nexport default withAITracking(reactPlugin, CreateBlobStorage);","import React, { Component } from 'react';\r\n\r\nimport { withAITracking } from '@microsoft/applicationinsights-react-js';\r\nimport { reactPlugin, appInsights } from './ApplicationInsights';\r\nimport InputGroup from 'reactstrap/lib/InputGroup';\r\n// const getCustomerFromDB = useTrackEvent(appInsights, \"GetCustomers\", \"https://localhost:44332/Customer\");\r\n\r\nexport class CamundaStartProcessDMN extends Component {\r\n    static displayName = \"CamundaStartProcessDMN\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n      this.state = { response: \"\", typeOfBuyer: \"\" };\r\n      this.handleChangeBuyerType = this.handleChangeBuyerType.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  static renderCreateBlobStorage(secret) {\r\n    return (\r\n      <h2>This is the secret: {secret}</h2>\r\n    );\r\n  }\r\n\r\n\r\n    handleChangeBuyerType(event) {\r\n        this.setState({typeOfBuyer: event.target.value});  \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >CreateBlobStorage</h1>\r\n            <p>This deomstrate starting a workflow process that uses DMN decision table.</p>\r\n            <div>Select buyer type:\r\n                <select name=\"typeOfBuyer\" id=\"typeOfBuyer\" onChange={this.handleChangeBuyerType}>\r\n                <option value=\"\">Select Category</option>\r\n                <option value=\"YoungMan\">Young Man</option>\r\n                    <option value=\"YoungWoman\">Young Woman</option>\r\n                    <option value=\"OldMan\">Old Man</option>\r\n                    <option value=\"OldWoman\">Old Woman</option>\r\n                    <option value=\"ManandWoman\">Man and Woman</option>\r\n                    <option value=\"Family\">Family</option>\r\n                    <option value=\"MiddleAgeMan\">Middle Age Man</option>\r\n                    <option value=\"MiddleAgeWoman\">Middle Age Woman</option>\r\n                </select>\r\n            </div>\r\n           \r\n            <div><button id=\"btnCreateBlob\" name=\"btnCreateBlob\" onClick={this.StartWorkflowProcess.bind(this)}>Start Workflow Process</button></div>\r\n        <div><h3 id=\"h3ResponseText\" name=\"h3ResponseText\">{this.state.response}</h3></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async StartWorkflowProcess() {\r\n    alert('Kalle');\r\n    var typeOfBuyer = this.state.typeOfBuyer;\r\n    var url = this.state.backendUrl;\r\n\r\n      //const response = await fetch('https://localhost:44348/StartWorkflowInstanceCarProcess?processName=Process_DecideCarType&typeOfBuyer=' + typeOfBuyer);\r\n      const response = await fetch('https://app-camundatemplate-test1.azurewebsites.net/StartWorkflowInstanceCarProcess?processName=Process_DecideCarType&typeOfBuyer=' + typeOfBuyer);\r\n      \r\n    const data = await response.json();\r\n    this.setState({ response: data.response });\r\n  }\r\n}\r\n\r\nexport default withAITracking(reactPlugin, CamundaStartProcessDMN);","import React, { Component } from 'react';\r\n\r\n// import { withAITracking } from '@microsoft/applicationinsights-react-js';\r\n// import { reactPlugin, appInsights } from './ApplicationInsights';\r\nimport withAppInsights from './ApplicationInsights';\r\n// const getCustomerFromDB = useTrackEvent(appInsights, \"GetCustomers\", \"https://localhost:44332/Customer\");\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport class VariableTable extends Component {\r\n  static displayName = \"VariableTable\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { variables: props.variables };\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n    static renderVariableTable(variables) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {variables.map(variable =>\r\n            <tr key={variable.name}>\r\n              <td>{variable.name}</td>\r\n              <td>{variable.value}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return VariableTable.renderVariableTable(this.state.variables);\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default VariableTable;","import React, { Component } from 'react';\r\n\r\n// import { withAITracking } from '@microsoft/applicationinsights-react-js';\r\n// import { reactPlugin, appInsights } from './ApplicationInsights';\r\nimport withAppInsights from './ApplicationInsights';\r\n// const getCustomerFromDB = useTrackEvent(appInsights, \"GetCustomers\", \"https://localhost:44332/Customer\");\r\nimport { VariableTable } from './VariableTable';\r\nimport developConfig from './SettingsDevelopment.json';\r\nimport productionConfig from './SettingsProduction.json';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nexport class GetWorkflowTasks extends Component {\r\n  static displayName = \"GetWorkflowTasks\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    var backendUrl = \"\";\r\n    if(process.env.NODE_ENV == 'development'){\r\n      backendUrl = developConfig.BACKEND_URL;\r\n    } else{\r\n      backendUrl = productionConfig.BACKEND_URL;\r\n    }\r\n\r\n    this.state = { backendUrl: backendUrl, workflowTasks: [], loading: true, taskClaimStatus: \"\", taskIdReadyForShipping: \"\" };\r\n    this.ClaimTask = this.ClaimTask.bind(this);\r\n    this.CompleteTask = this.CompleteTask.bind(this);\r\n    this.cartReadyForShipping = this.cartReadyForShipping.bind(this);\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.GetWorkflowTasks();\r\n  }\r\n\r\n  cartReadyForShipping(event){\r\n    const target = event.currentTarget;\r\n    const name = target.name\r\n    const id = target.id;\r\n    const checked = target.checked;\r\n    this.setState({taskIdReadyForShipping: id});  \r\n\r\n    alert('Ready');\r\n  }\r\n\r\n    renderTasks(workflowTasks) {\r\n    return (\r\n      <div>\r\n        \r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n          <th>taskId</th>\r\n          <th></th>\r\n          <th></th>\r\n          <th></th>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n            <th>Assignee</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {workflowTasks.map(task =>\r\n            <tr key={task.userTasks.taskId}>\r\n              <td>\r\n                {task.userTasks.taskId}\r\n              </td>\r\n              <td><Button disabled={task.userTasks.assignee != null ? true : false} id={task.userTasks.taskId} name={task.userTasks.taskId} onClick={() => this.ClaimTask(task.userTasks.taskId)}>Claim Task</Button></td>\r\n              <td><Button disabled={task.userTasks.assignee == null ? true : false} onClick={() => this.CompleteTask(task.userTasks.taskId)}>Complete Task</Button></td>\r\n              <td>\r\n                <div>Ready for shipping</div>\r\n                <input id={task.userTasks.taskId} name={task.userTasks.taskId} \r\n                      type=\"checkbox\" value=\"OK\" onChange={this.cartReadyForShipping}>\r\n                </input>\r\n              </td>\r\n              <td>{task.userTasks.name}</td>\r\n              <td>{task.userTasks.Description}</td>\r\n              <td>{task.userTasks.assignee}</td>\r\n              <td><VariableTable variables={task.variables}></VariableTable></td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n        : this.renderTasks(this.state.workflowTasks);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >User Tasks</h1>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async GetWorkflowTasks() {\r\n    var url = this.state.backendUrl;\r\n\r\n    const response = await fetch(url + 'GetCartTasks');\r\n    const data = await response.json();\r\n    this.setState({ workflowTasks: data, loading: false });\r\n  }\r\n\r\n  async ClaimTask(taskId)\r\n  {\r\n    var url = this.state.backendUrl;\r\n\r\n    const response = await fetch(url + 'ClaimTask?taskId=' + taskId + '&user=demo');\r\n    const data = await response.json();\r\n    var wfs = this.state.workflowTasks;\r\n    const workflowTask = wfs.find(e => e.userTasks.taskId === taskId);\r\n    workflowTask.userTasks.assignee = 'demo';\r\n\r\n    this.setState({ workflowTasks: wfs, taskClaimStatus: data }); // \r\n\r\n  }\r\n\r\n  async CompleteTask(taskId)\r\n  {\r\n    var url = this.state.backendUrl;\r\n\r\n    var taskIdReadyForShipping = this.state.taskIdReadyForShipping;\r\n    var readyForShipping = false;\r\n\r\n    if(taskIdReadyForShipping == taskId)\r\n    {\r\n      readyForShipping = true;\r\n    }\r\n    \r\n    const response = await fetch(url + 'CompleteTask?taskId=' + taskId + '&readyForShipping=' + readyForShipping);\r\n   const data = await response.json();\r\n   this.setState({ taskClaimStatus: data });\r\n\r\n    var wfs = this.state.workflowTasks;\r\n    const workflowTask = wfs.find(e => e.userTasks.taskId != '11');\r\n\r\n //   this.setState({ workflowTasks: workflowTask }); // \r\n\r\n  }\r\n\r\n}\r\n\r\nexport default GetWorkflowTasks;","import React, { Component } from 'react';\r\n\r\nimport { withAITracking } from '@microsoft/applicationinsights-react-js';\r\nimport { reactPlugin, appInsights } from './ApplicationInsights';\r\nimport InputGroup from 'reactstrap/lib/InputGroup';\r\n// const getCustomerFromDB = useTrackEvent(appInsights, \"GetCustomers\", \"https://localhost:44332/Customer\");\r\nimport developConfig from './SettingsDevelopment.json';\r\nimport productionConfig from './SettingsProduction.json';\r\n\r\n\r\nexport class CamundaDirectCallDMN extends Component {\r\n    static displayName = \"CamundaDirectCallDMN\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    var backendUrl = \"\";\r\n    if(process.env.NODE_ENV == 'development'){\r\n      backendUrl = developConfig.BACKEND_URL;\r\n    } else{\r\n      backendUrl = productionConfig.BACKEND_URL;\r\n    }\r\n\r\n      this.state = { backendUrl: backendUrl, response: [], typeOfBuyer: \"\" };\r\n      this.handleChangeBuyerType = this.handleChangeBuyerType.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n\r\n    handleChangeBuyerType(event) {\r\n        this.setState({typeOfBuyer: event.target.value});  \r\n  }\r\n\r\n  render() {\r\n    var url = this.state.backendUrl;\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Get DMN Decision</h1>\r\n        <h3>Server URL: {url}</h3>\r\n            <p>This deomstrate how to get a decision straight from DMN engine.</p>\r\n            <div>Select buyer type:\r\n                <select name=\"typeOfBuyer\" id=\"typeOfBuyer\" onChange={this.handleChangeBuyerType}>\r\n                <option value=\"\">Select Category</option>\r\n                    <option value=\"YoungMan\">Young Man</option>\r\n                    <option value=\"YoungWoman\">Young Woman</option>\r\n                    <option value=\"OldMan\">Old Man</option>\r\n                    <option value=\"OldWoman\">Old Woman</option>\r\n                    <option value=\"ManandWoman\">Man and Woman</option>\r\n                    <option value=\"Family\">Family</option>\r\n                    <option value=\"MiddleAgeMan\">Middle Age Man</option>\r\n                    <option value=\"MiddleAgeWoman\">Middle Age Woman</option>\r\n                </select>\r\n            </div>\r\n           \r\n            <div><button id=\"btnCreateBlob\" name=\"btnCreateBlob\" onClick={this.GetDecisionForSelection.bind(this)}>Call DMN</button></div>\r\n        <div>\r\n          <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n          <thead>\r\n            <tr>\r\n              <th>Suggestion</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.response.map(decision =>\r\n              <tr>\r\n                <td>{decision.suggestedCarModel.value}</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async GetDecisionForSelection() {\r\n    var typeOfBuyer = this.state.typeOfBuyer;\r\n    var url = this.state.backendUrl;\r\n\r\n      //const response = await fetch('https://localhost:44348/GetCarModelDecision?typeOfBuyer=' + typeOfBuyer);\r\n      const response = await fetch(url + 'GetCarModelDecision?typeOfBuyer=' + typeOfBuyer);\r\n      \r\n    const data = await response.json();\r\n    this.setState({ response: data });\r\n  }\r\n}\r\n\r\nexport default withAITracking(reactPlugin, CamundaDirectCallDMN);","import React, { Component } from 'react';\r\n\r\nimport { withAITracking } from '@microsoft/applicationinsights-react-js';\r\nimport { reactPlugin, appInsights } from './ApplicationInsights';\r\n\r\n\r\nimport InputGroup from 'reactstrap/lib/InputGroup';\r\n// const getCustomerFromDB = useTrackEvent(appInsights, \"GetCustomers\", \"https://localhost:44332/Customer\");\r\nimport developConfig from './SettingsDevelopment.json';\r\nimport productionConfig from './SettingsProduction.json';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport FormControl from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport class CreateCart extends Component {\r\n  static displayName = \"CreateCart\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    var backendUrl = \"\";\r\n    if(process.env.NODE_ENV === 'development'){\r\n      backendUrl = developConfig.BACKEND_URL;\r\n    } else{\r\n      backendUrl = productionConfig.BACKEND_URL;\r\n    }\r\n\r\n    this.state = { backendUrl: backendUrl, cartId: \"\", cartItemName: \"\", cartItems: [], cartCheckedOut: false };\r\n    this.handleChangeCartItemName = this.handleChangeCartItemName.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n\r\n  handleChangeCartItemName(event) {\r\n        this.setState({cartItemName: event.target.value});  \r\n  }\r\n\r\n  render() {\r\n      \r\n    return (\r\n        <div>\r\n        <h1 id=\"tabelLabel\" >Create Cart</h1>\r\n        <p>Click on Create Cart first. After that fill in Item Name and click Add Item</p>\r\n        <h3>CartId: {this.state.cartId}</h3>\r\n        \r\n        <div className=\"container\">\r\n          <div><Button disabled={this.state.cartId === \"\" ? false : true } id=\"btnCreateCart\" name=\"btnCreateCart\" onClick={this.CreateCart.bind(this)}>Create Cart</Button></div>\r\n          <div className=\"row\">&nbsp;</div>\r\n          <div class=\"form-outline\">\r\n            Item Name: <input type=\"text\" className=\"form-control\" disabled={(this.state.cartId !== \"\" ? false : true) || (this.state.cartCheckedOut) } id=\"txtItemName\" name=\"txtItemName\" onChange={this.handleChangeCartItemName}></input>\r\n          </div>\r\n          <div className=\"row\">&nbsp;</div>\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12 col-md-8 h-50 d-inline-block\"><Button disabled={(this.state.cartId !== \"\" ? false : true) || (this.state.cartCheckedOut) } id=\"btnCreateCartItem\" name=\"btnCreateCart\" onClick={this.CreateCartItem.bind(this)}>Create Cart Item</Button></div>\r\n          </div>\r\n          <div className=\"row\">&nbsp;</div>\r\n          <div class=\"row\">\r\n            <div className=\"col-xs-12 col-md-8\"><Button disabled={(this.state.cartId !== \"\" ? false : true) || (this.state.cartCheckedOut) } id=\"btnCheckOutCart\" name=\"btnCheckOutCart\" onClick={this.CheckOutCart.bind(this)}>Check Out Cart</Button></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">&nbsp;</div>\r\n        <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cart Item</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.state.cartItems.map(item =>\r\n            <tr key={item}>\r\n              <td>{item}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async CheckOutCart() {\r\n    withAITracking.trackMetric(\"Create Cart CheckoutCart\");\r\n    var cartId = this.state.cartId;\r\n    var url = this.state.backendUrl;\r\n\r\n    this.setState({cartCheckedOut: true });\r\n  }\r\n\r\n  async CreateCartItem() {\r\n    var url = this.state.backendUrl;\r\n    var cartId = this.state.cartId;\r\n    var itemName = this.state.cartItemName;\r\n    var cartItems = this.state.cartItems;\r\n    cartItems.push(itemName);\r\n    this.setState({cartItems: cartItems});\r\n\r\n    await fetch(url + 'AddCartItem?cartId=' + cartId + '&itemName=' + itemName);\r\n  }\r\n\r\n  async CreateCart() {\r\n    withAITracking.trackMetric(\"Create Cart CreateCart\");\r\n    var url = this.state.backendUrl;\r\n\r\n    const response = await fetch(url + 'CreateCart');\r\n    const data = await response.json();\r\n    this.setState({ cartId: data.cartId });\r\n  }\r\n\r\n}\r\n\r\nexport default withAITracking(reactPlugin, CreateCart);","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport { FetchData } from './components/FetchData';\r\nimport { Counter } from './components/Counter';\r\nimport { GetCarts } from './components/GetCarts';\r\nimport { KeyVaultSecret } from './components/KeyVaultSecret';\r\nimport { CreateBlobStorage} from './components/CreateBlobStorage'\r\nimport {CamundaStartProcessDMN} from './components/CamundaStartProcessDMN'\r\nimport {GetWorkflowTasks} from './components/GetWorkflowTasks'\r\nimport {CamundaDirectCallDMN} from './components/CamundaDirectCallDMN'\r\nimport {CreateCart} from './components/CreateCart'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/counter' component={Counter} />\r\n        <Route path='/fetch-data' component={FetchData} />\r\n        <Route path='/GetCarts' component={GetCarts} />\r\n        <Route path='/CreateCart' component={CreateCart} />\r\n        <Route path='/KeyVaultSecret' component={KeyVaultSecret} />\r\n        <Route path='/CreateBlobStorage' component={CreateBlobStorage} />\r\n        <Route path='/CamundaStartProcessDMN' component={CamundaStartProcessDMN} />\r\n        <Route path='/GetWorkflowTasks' component={GetWorkflowTasks} />\r\n        <Route path='/CamundaDirectCallDMN' component={CamundaDirectCallDMN} />\r\n        \r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}